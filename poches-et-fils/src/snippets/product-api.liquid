
<script type="text/javascript">


  const getProducts = _ => jQuery.getJSON('/admin/products.json/', saveProducts)

  const saveProducts = arr => {
    // Receive API data
    const products = new Array()
    console.log("Received products:", arr)
    arr.products.map((product) => {
      products.push({
        'id': product.id,
        'options': product.options,
        'type': product.product_type,
        'handle': product.handle,
        'title': product.title,
        'variants': product.variants,
        'images': product.images,
        'price': product.price
      })
    })
    displayProducts(products)
  }

  const displayProducts = products => {
    // Append API data to HTML
    console.log("Displaying products:", products)
    const thumbsContainer = $(document).find('.thumbnails-container')
    products.filter(item => item.type.toLowerCase().includes('pocket')).map((product) =>
      thumbsContainer.append(`
		<img class="thumbnail"
			 src="${product.images[0].src}" 
			 alt="${product.handle}"
			 title="${product.title}"
		/>`))
  }
  
  const setDisplay = (event) => {
    // Replace .main-product-view image
    const currentDisplay = $(document).find('.selected-display')
    const selectedThumbnail = $(event.target)
    const previouslySelected = selectedThumbnail.hasClass('selected-thumb')
    
    $('*.selected-thumb').not(selectedThumbnail).removeClass('selected-thumb')
    
    if (previouslySelected)
      selectedThumbnail.removeClass('selected-thumb')
	else
      selectedThumbnail.addClass('selected-thumb')
    
    $('.product-preview').attr('src', previouslySelected ? "" : event.target.currentSrc)
  }

  $(document).on('click', 'img.thumbnail[src]', setDisplay)
  $(document).ready(getProducts)
</script>



<style>
  .products-container {
    display: flex;
    flex: 0 0 auto;
    background: rgba(220, 220, 220, 0.1);
    flex-flow: row wrap;
    margin: 5px;
    flex-basis: 20% !important;
  }
  
  .text-center { text-align: center; }

  
  .flex-block { flex-basis: 100%; }

  .flex-row {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    align-content: center;
  }
  
  .flex-strech { align-items: stretch; }
  
  .flex-center { align-content: center; }
  
  .thumbnail-scrollbar { flex-basis: 10% !important; }
  
  .main-product-view { flex-basis: 40% !important; }
  
  .product-thumbnails {
    display: flex;
    flex-basis: 40% !important;
    flex-flow: row wrap;
  }
  
  .products-container > * {
    background: rgba(220, 220, 220, 0.1);
    margin: 5px;
  }
  
  .sizes-container span {
    background: #eaeaea;
    padding: 10px;
    margin: 7px;
    border-radius: 2px;
    transition: 0.2s;
  }
  
  .sizes-container span:hover {
    background: #e2e2e2;
    font-weight: bold;
    transition: 0.2s;
  }
  
  img.thumbnail {
    height: 35px;
    width: 35px;
    cursor: pointer;
    transition: 0.3s;
  }

  img.thumbnail.selected-thumb {
    padding: 1px;
    border: 2px solid #021a40;
    background-color: rgba(255, 255, 255, 0.5);
    transition: 0.3s;
  }
  
  img.product-preview {
    display: block;
    opacity: 1;
    transition: 0.3s;
  }
  
  img.product-preview[src=""] {
    display: none;
    opacity: 0;
    transition: 0.3s;
  }
</style>