<script type="text/javascript">
  const getProducts = _ => jQuery.getJSON('/admin/products.json/', saveProducts)

  const saveProducts = arr => {
    // Receive API data
    const thumbsContainer = $(document).find('.thumbnails-container')
    const currentProduct  = window.location.href.replace(/(http)+.+(products\/)/, '')
    let   products 		  = new Array()
    
    arr.products.map((product) => {
      products.push({
        'id': 			product.id,
        'options': 		product.options,
        'product_type': product.product_type,
        'handle': 		product.handle,
        'title': 		product.title,
        'variants': 	product.variants,
        'images':		product.images,
        'price': 		product.price
      })
    })
    
    // Append API data to HTML
    products = products.filter(item => item.product_type.toLowerCase().includes('pocket'))

    products.map(product => {
      thumbsContainer.append(`
        <img class="thumbnail"
        src="${product.images[0].src}"
        data-id="${product.id}"
        alt="${product.handle}"
        title="${product.title}" />`)
      
      	if(product.handle === currentProduct)
          $(`img.thumbnail[alt="${product.handle}"]`).click()
    })
  }

  const displayProduct = event => {
    // Replace .main-product-view image
    const currentDisplay     = $(document).find('.selected-display')
    const selectedThumb  	 = $(event.target)
    const previouslySelected = selectedThumb.hasClass('selected-thumb')
    const curHandle          = selectedThumb.attr('alt') || false

    // set/remove 'selected-thumb' class
    selectedThumb.addClass('selected-thumb')
    $('.product-preview').attr('src', selectedThumb.attr('src'))
    $('*.selected-thumb').not(selectedThumb).removeClass('selected-thumb')

    // update product's info
    jQuery.getJSON(`${curHandle}.js`, product => {
      const colorsContainer  = $(document).find('.colors-container')
      const newPrice = $('.product--variant--price')
      .text()
      .replace(/[\d\.\,]+/, formatCurrency(product.price))

      // Add product's sizes
      colorsContainer.empty()

      product.options[1]
      .values
      .map(color => colorsContainer.append(`<li title="${color}"></li>`))

      $('.product--VA--name').text(product.title)
      $('.product--VA--desc').text(product.description)
      $('.product--variant--price').text(newPrice)
    })
  }

  const setColor = event => {
    const colorButton     = $(event.target)
    const newColor        = colorButton.attr('title')
    const currentColor    = $('.current-color')
    const colorsContainer = $(document).find('.colors-container')

    currentColor.text(newColor)
    colorsContainer.children().removeClass('selected-color')
    colorButton.addClass('selected-color')
  }

  const setSize = event => {
    const sizesContainer = $('.product--design--selector--grid')
    const selectedSize = $(event.target)
    sizesContainer.children().removeClass('selected')
    selectedSize.addClass('selected')
  }

  const navThumbnails = event => {
    const selectedThumb = $('.selected-thumb').length ? $('.selected-thumb') : $('img.thumbnail:first-child')
    const dir = $(event.target)

    $('.selected-thumb').removeClass('selected-thumb')
    if (dir.hasClass('go-prev'))
      selectedThumb.prev().addClass('selected-thumb').click()
      else
        selectedThumb.next().addClass('selected-thumb').click()
        }

  const addToCart = event => {
    const quantity = $('select.product--form--qty--selector').val()
    const product  = $('img.thumbnail.selected-thumb').attr('alt') || false 

    event.preventDefault()

    if(product && quantity)
      jQuery.getJSON(`${product}.js`, data => {
        // filter() conditions should be changed to find
        // a variant that matches GENDER and SHIRT-TYPE
        const variant_id = data.variants.filter(item => true)[0].id
        jQuery.post('/cart/add.js', {
          'id': variant_id, 
          'quantity': quantity
        })
        .complete(data => {
          const response = JSON.parse(data.responseText)
          if(response.id) {
            console.log("Valid request:", response)
            $('.product--form--atc')
            .addClass('disabled success')
            .attr('disabled', true)
            .attr('value', 'ADDED TO CART')

            $('.ajax--cart--popout--section').toggle('slide')
            $('.product--form--selector, .toggles--section').css('display', 'none')
          }
          else
            console.warn("Invalid request:", response)
            })
      })
      else
        console.log(`Data is not ready: qty ${quantity}, prod ${product}`)
        }

  $(document).ready(getProducts)
  $(document).on('click', '.thumbnail[src]', displayProduct)
  $(document).on('click', '.thumb-nav-arrow', navThumbnails)
  $(document).on('click', '.colors-container li[title]', setColor)
  $(document).on('click', '.product--size--selector', setSize)
  $(document).on('click', '.product--form--atc', addToCart)
  $(document).on('click', 'a[data-keep-shopping]', _ => {
    $('.product--form--selector, .toggles--section').css('display', 'block')
    $('.ajax--cart--popout--section').css('display', 'none')
  })
  $(document).on('click', '.toggle--item', event => {
    const container = $(event.target).find('.toggle--contents')
    container.is(':visible') ? container.slideUp() : container.slideDown()
  })
</script>

<style>
  .text-center { text-align: center; }
  .flex-block { flex-basis: 100%; }
  .flex-row {
    display: flex;
    flex-flow: row wrap;
    justify-content: center;
    align-content: center;
  }

  .products-container {
    display: flex;
    flex: 0 0 auto;
    background: rgba(220, 220, 220, 0.1);
    flex-flow: row wrap;
    margin: 5px;
    flex-basis: 20% !important;
  }

  .flex-strech { align-items: stretch; }

  .flex-center { align-content: center; }

  .thumbnail-scrollbar { flex-basis: 10% !important; }

  .main-product-view { flex-basis: 40% !important; }

  .product-thumbnails {
    display: flex;
    flex-basis: 40% !important;
    flex-flow: row wrap;
  }

  .products-container > * {
    background: rgba(220, 220, 220, 0.1);
    margin: 5px;
  }

  .sizes-container span {
    background: #eaeaea;
    padding: 10px;
    margin: 7px;
    border-radius: 2px;
    transition: 0.2s;
  }

  .sizes-container span:hover {
    background: #e2e2e2;
    font-weight: bold;
    transition: 0.2s;
  }

  .thumbnails-container {
    text-align: center; 
    padding: 0 10px 0 10px;
  }

  img.thumbnail {
    height: 45px;
    width: 45px;
    cursor: pointer;
    transition: 0.3s;
    object-fit: none;
    margin: 5px;
    padding: 3px;
    user-select: none;
  }
  img.thumbnail.selected-thumb {
    outline: 1px solid rgba(0, 0, 0, 0.5);
    background-color: rgba(255, 255, 255, 0.5);
    transition: 0.3s;
  }

  img.product-preview {
    display: block;
    max-width: 180px; 
    opacity: 0.9;
    transition: 1.5s;
  }

  img.product-preview:hover {
    opacity: 1;
    transition: 0.3s;
  }

  img.product-preview[src=""] {
    display: none;
    opacity: 0;
    transition: 0.3s;
  }

  .no-wrap { white-space: nowrap }

  .product--variant--price {
    font-size: 20px;
    font-weight: 400;
    letter-spacing: 0;
    margin: 0 0 15px 0;
  }

  .product--variant--image--image {
    margin-right: 0;
    left: 0;
  }

  .product--variant--image--image { height: auto; }

  ul.colors-container {
    list-style: none;
    margin-top: 5px;
    padding: 0;
  }
  ul.colors-container li {
    float: left;
    margin: 3px;
    cursor: pointer;
    height: 25px;
    width: 25px;
    border-radius: 50%;
    border: 1px solid rgba(128, 128, 128, 0.49);
    transition: 0.3s;
  }

  ul.colors-container li.selected-color {
    border: 2px solid rgba(0, 0, 0, 0.54);
    transition: 0.3s;
  }

  li[title="Black"] { background: black; }
  li[title="White"] { background: white; }
  li[title="Navy"] { background: navy; }
  li[title="Grey"] { background: grey; }
  li[title="Burgundy"] { background: #900020; }
  li[title="Dark-Grey"] { background: darkgray; }

  .product--form--selector {
    min-height: unset;
    margin-bottom: 15px;
  }

  .thumb-nav-container {
    position: relative;
    top: 35px;
    width: 100%;
    display: flex;
    justify-content: space-between;
  }

  .thumb-nav-arrow { 
    user-select: none;
    cursor: pointer;
    font-size: 4em;
    font-weight: 100;
    opacity: 0.5;
  }

  .disabled { cursor: not-allowed !important; }

  .product--form--atc.disabled.success {
    background: lightgreen;
    outline: 1px solid rgba(0, 128, 0, 0.5);
  }
</style>