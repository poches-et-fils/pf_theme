{%- comment -%}Set section{%- endcomment -%}

<div class="realted--product--section">
  <h3 class="realted--title">{{section.settings.title}}</h3>
  <div class="related--product--grid--block"></div>
</div>

{%- comment -%}Mobile CSS Overrides {%- endcomment -%}

<style>

  /* Corrects size and postion of pockets on mobile */
  @media (max-width: 796px) and (max-width: 900px) {
    .related--product--pocket {
      width: 50px !important;
      height:50px !important;
      left: -104px;
      top:-50px;
    }
  }

  /* Corrects size and postion of pockets on MiDPI Desktops */
  @media (min-width: 900px) and (max-width: 1400px){
    .related--product--pocket {
      width: 35px !important;
      height:35px !important;
      left: -64px;
      top:-30px;
    }
  }

  /* Corrects size and postion of pockets on HiDPI Desktops */
  @media (min-width: 1400px) {
    .related--product--pocket {
      width: 35px !important;
      height:35px !important;
      left: -84px;
      top:-30px;
    }
  }
</style>


<script>
  (function () {

    const fillRelatedProducts = _ => {
      const handle = '{{ product.handle }}';
      $.getJSON(`${handle}.js`, product => {
        const variants = product.variants
        const relatedContainer = $('.related--product--grid--block')
        let counter = 0
        while (counter < 4) {
          counter ++
          const random  	= Math.floor(Math.random() * variants.length + 1)
          const variant 	= variants[random]
          let urlParams 	= variant.options
          urlParams 		= urlParams.map(param => param = `param=${param}`)
          const randomModel = getRandImg(urlParams, false) || ''
          
          
          const topCSS = randomModel.includes('Baby') ? '10px' : randomModel.includes('Kid') ? '0' : '-30px'
          const leftCSS = randomModel.includes('Baby') ?  '-95px': randomModel.includes('Kid') ? '-95px' : '-85px'
          
          console.log(randomModel, topCSS, leftCSS)
          
          const newElement 	= `
            <a href="?gender=${variant.options[0]}&type=${variant.options[2]}"
            class="product--grid--item--four w-inline-block">
            <div class="product--grid--item--image men--tshirt">
            <div class="product--grid--item--variant--overlay random-colored-bg" 
            style="background-image: url('${randomModel}');">
            <img src="${product.featured_image}"
            width="25"
            height="25"
            class="product--grid--item--pocket related--product--pocket"
			style="top: ${topCSS}; left: ${leftCSS};">
            </div>
            </div>
            <h5 class="product--grid--item--title">
            ${ variant.options[0] }'s
            ${ variant.options[1].toLowerCase() }
            ${ variant.options[2] }
            </h5>
            <div>$${ formatCurrency(variant.price) }</div>
            <div class="product--grid--item--link">See more styles</div>
            </a>`
          
          
          if (randomModel) {
            relatedContainer.append(newElement)
          }
          variants.splice(random, 1)
        }
        fillBg()
      })
    }

    $(document).ready(fillRelatedProducts)
  })()
</script>

<style>
  .product--grid--item--variant--overlay.random-colored-bg {
    background-size: cover
  }

  .related--product--pocket {

  }
</style>'